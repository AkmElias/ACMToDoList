/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package acmtodolist;

import MainMenuBar.MainMenuBarForm;
import javax.swing.JMenuBar;
import problemdetails.FullProblem;
import problemdetails.SimpleProblem;

/**
 *
 * @author Kazi Nayeem
 */
public class MainFrameToDoList extends javax.swing.JFrame {

    /**
     * Creates new form MainFrameToDoList
     * add a SplitPane in main frame
     * add topic panel as left component of splitpane
     * add a tabbed pane as right component of splitpane 
     * initialize problem tab and add problem tab to the tabbed pane
     */
    public MainFrameToDoList() {
        super("ACM To Do List");
        initComponents();
        
        mainMenuBar = new MainMenuBarForm();
        setJMenuBar(mainMenuBar);
        
        ProblemJPanel = new ProblemTabJPanelFrom();
        mainJTabbedPane.addTab("Problems", null, ProblemJPanel, "Display All Problems");
        
        addProblemJPanel = new AddProblemJPanelForm();
        mainJTabbedPane.addTab("Add Problem", null, addProblemJPanel, "Add new Problem");
        
        topicPanel = new TopicJPanelForm();
        jSplitPane1.setLeftComponent(topicPanel);
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        mainJTabbedPane = new javax.swing.JTabbedPane();
        jMenuBar1 = new javax.swing.JMenuBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jSplitPane1.setDividerLocation(175);
        jSplitPane1.setRightComponent(mainJTabbedPane);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1129, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 618, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    
        public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrameToDoList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrameToDoList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrameToDoList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrameToDoList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrameToDoList().setVisible(true);
            }
        });
    }
        
    private ProblemTabJPanelFrom ProblemJPanel;
    private AddProblemJPanelForm addProblemJPanel;
    private JMenuBar mainMenuBar;
    private TopicJPanelForm topicPanel;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTabbedPane mainJTabbedPane;
    // End of variables declaration//GEN-END:variables

    /**
     * update Judge combo box in the whole panel
     */
    public void refreshJudgeComboBox() {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        addProblemJPanel.refreshJudgeSelectComboBox();
    }
    /**
     * update the problem table
     */
    public void refreshProblemJTable() {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        ProblemJPanel.refreshProblemJTable();
    }
    /**
     * update topic list in topic panel
     * update topic list in add problem panel
     * update topic list in problem Panel
     */
    public void refreshTopicList() {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        topicPanel.refreshTopicList();
        addProblemJPanel.refreshTopicList();
        ProblemJPanel.refreshTopicList();
    }
    /**
     * problem update in problem details panel
     * @param problem 
     */
    public void tableLastSelectedProblemUpdate(FullProblem problem){
        ProblemJPanel.tableLastSelectedProblemUpdate(problem);
    }
    /**
     * problem tabel update for specific topic
     * update the name of topic in problem panel
     * @param topicName 
     */
    void refreshProblemJTable(String topicName) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        ProblemJPanel.refreshProblemJTable(topicName);
    }
    /**
     * problems tabel update for specific problem
     * @param problem 
     */
    void refreshProblemJTable(SimpleProblem problem) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        ProblemJPanel.refreshProblemJTable(problem);
    }
    
}
